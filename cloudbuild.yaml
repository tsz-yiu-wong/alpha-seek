steps:
  # 调试步骤 - 查看项目结构
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'debug'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'ls -la && find . -type f -name "Dockerfile*" || echo "No Dockerfiles found"'

  # 构建后端镜像 - 使用显式路径
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    dir: '.'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/alphaseek-backend', '-f', './docker/Dockerfile.backend', '.']

  # 构建前端镜像 - 使用显式路径
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    dir: '.'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/alphaseek-frontend', '-f', './docker/Dockerfile.frontend', '.']

  # 推送后端镜像到 Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args: ['push', 'gcr.io/$PROJECT_ID/alphaseek-backend']

  # 推送前端镜像到 Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args: ['push', 'gcr.io/$PROJECT_ID/alphaseek-frontend']

  # 部署后端到 Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-backend'
    args:
      - 'run'
      - 'deploy'
      - 'alphaseek-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/alphaseek-backend'
      - '--platform'
      - 'managed'
      - '--region'
      - 'us-central1'
      - '--allow-unauthenticated'

  # 部署前端到 Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-frontend'
    args:
      - 'run'
      - 'deploy'
      - 'alphaseek-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/alphaseek-frontend'
      - '--platform'
      - 'managed'
      - '--region'
      - 'us-central1'
      - '--allow-unauthenticated'

images:
  - 'gcr.io/$PROJECT_ID/alphaseek-backend'
  - 'gcr.io/$PROJECT_ID/alphaseek-frontend' 